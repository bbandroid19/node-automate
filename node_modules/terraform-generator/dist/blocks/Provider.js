"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
class Provider extends __1.Block {
    /**
     * Construct provider.
     * Refer to Terraform documentation on what can be put as type & arguments.
     *
     * @param type type
     * @param args arguments
     */
    constructor(type, args) {
        super('provider', [type], args);
        this.type = type;
    }
    asArgument() {
        if (this.getArgument('alias')) {
            return new __1.Argument(`${this.type}.${this.getArgument('alias')}`);
        }
        return new __1.Argument(this.type);
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    attr(name) {
        throw new Error('Inaccessible function.');
    }
}
exports.default = Provider;
