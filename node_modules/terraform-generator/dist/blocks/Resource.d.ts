import { Block, Argument, Attribute, Data } from '..';
/**
 * Options to convert resource into data source.
 *
 * @param type new type of the data source
 * @param name new name of the data source
 *
 */
export interface ResourceToDataOptions {
    type?: string;
    name?: string;
}
export default class Resource extends Block {
    readonly type: string;
    readonly name: string;
    /**
     * Construct resource.
     * Refer to Terraform documentation on what can be put as type & arguments.
     *
     * @param type type
     * @param name name
     * @param args arguments
     */
    constructor(type: string, name: string, args?: object);
    asArgument(): Argument;
    attr(name: string): Attribute;
    /**
     * Convert resource into data source.
     * Refer to Terraform documentation on what can be put as arguments.
     *
     * @param options options
     * @param argNames names of resource arguments to converted into data source arguments;
     * use array for name mapping, position 0 = original resource's argument name, position 1 = mapped data source's argument name
     * @param args extra arguments
     */
    toData(options: ResourceToDataOptions, argNames: (string | [string, string])[], args?: object): Data;
}
